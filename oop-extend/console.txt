
// Console one-liners


// Clear unused room memory
for (var name in Memory.rooms) { var keys = Object.keys(Memory.rooms[name]); if (keys.length == 0) { delete Memory.rooms[name]; } }

// Clear routing tables for all rooms
for (var name in Memory.rooms) { delete Memory.rooms[name].r; }

// Clear routing tables for a single room
delete Memory.rooms['E27N38'].r;

// Clear voting tables for all rooms
for (var name in Memory.rooms) { delete Memory.rooms[name].votes; }

// Clear voting tables for a single room
delete Memory.rooms['E27N38'].votes;

// Get number of active creeps
Object.keys(Game.creeps).length

// Enable debugging for a specific creep
Memory.creeps['James'].debug = true;

// Profiling
Game.profiler.profile(1000)
Game.profiler.email(1000)

// Permit access to shared room for specific player
Memory.rooms['E28N41'].allow.push('Kotarou');
Memory.rooms['E27N36'].allow.push('tedivm');

// Revoke access to shared room for specific player
Memory.rooms['E28N41'].allow.filter( function(p) { p != 'Kotarou' } );

// Permit access to shared room for any player
Memory.rooms['E27N40'].allow.push('*');

// Loop through all currently visible rooms
_.forEach(_.keys(Game.rooms), function(name) { delete Memory.rooms[name].roads } );

// Loop through all rooms in memory
